test5 <- na.omit(test5)
survpac5 <- princomp(test5)
summary(survpac5)
plot(survpac5)  #one super obvious factor, maybe two or 3
fa5 <- factanal(test5, factors = 3)
fa5
write.csv(rbind(fa1$loadings, fa3$loadings, fa5$loadings), "test5.csv")
#Test on original data
test2 <- lang
test2 <- test2[,c("CLOSE","CORRECTED","EFFECTIVE","KIND","NEEDS2","OPENFEED","INTERESTED","LANGPOS","LANGEXPECT")]
test2 <- na.omit(test2)
survpac2 <- princomp(test2)
summary(survpac2)
plot(survpac2)  #one super obvious factor, maybe two or 3
fa2 <- factanal(test2, factors = 4)
fa2
#Test on 3 buckets
test4 <- dat
test4 <- subset(test4,test4$LANGLEARN==1)
test4 <- test4[,c("CLOSE","CORRECTED","EFFECTIVE","KIND","NEEDS2","OPENFEED","INTERESTED","LANGPOS","LANGEXPECT")]
test4 <- na.omit(test4)
survpac4 <- princomp(test4)
summary(survpac4)
plot(survpac4)  #one super obvious factor, maybe two or 3
fa4 <- factanal(test4, factors = 4)
fa4
#Test on 5 buckets
test6 <- dat1
test6 <- subset(test6,test6$LANGLEARN==1)
test6 <- test6[,c("CLOSE","CORRECTED","EFFECTIVE","KIND","NEEDS2","OPENFEED","INTERESTED","LANGPOS","LANGEXPECT")]
test6 <- na.omit(test6)
survpac6 <- princomp(test6)
summary(survpac6)
plot(survpac6)  #one super obvious factor, maybe two or 3
fa6 <- factanal(test6, factors = 4)
fa6
write.csv(rbind(fa2$loadings, fa4$loadings, fa6$loadings), "test5a.csv")
mychifunc(met4,"CLOSE")
# probably not the best idea - Factor Analysis seems more helpful
##### 15 QUESTION SURVEY##########################################################################
#Test on original data
test1 <- met4[,c("ACTHELP","CORRECTED","EFFECTIVE","EXPECTAT","INTERESTED","KIND","MOTIV","NEEDS1","OPENFEED","PREP","SINCERE","VALUED")]
test1 <- na.omit(test1)
survpac <- princomp(test1)
summary(survpac)
plot(survpac)  #one super obvious factor, maybe two or 3
fa1 <- factanal(test1, factors = 3)
fa1
#Test on 3 buckets
test3 <- dat[,c("ACTHELP","CORRECTED","EFFECTIVE","EXPECTAT","INTERESTED","KIND","MOTIV","NEEDS1","OPENFEED","PREP","SINCERE","VALUED")]
test3 <- na.omit(test3)
survpac3 <- princomp(test3)
summary(survpac3)
plot(survpac3)  #one super obvious factor, maybe two or 3
fa3 <- factanal(test3, factors = 3)
fa3
# Test on 5 buckets
test5 <- dat1[,c("ACTHELP","CORRECTED","EFFECTIVE","EXPECTAT","INTERESTED","KIND","MOTIV","NEEDS1","OPENFEED","PREP","SINCERE","VALUED")]
test5 <- na.omit(test5)
survpac5 <- princomp(test5)
summary(survpac5)
plot(survpac5)  #one super obvious factor, maybe two or 3
fa5 <- factanal(test5, factors = 3)
fa5
write.csv(rbind(fa1$loadings, fa3$loadings, fa5$loadings), "My15.csv")
##### 10 QUESTION SURVEY##########################################################################
#Test on original data
test1 <- met4[,c("ACTHELP","CORRECTED","EXPECTAT","KIND","MOTIV","OPENFEED","PREP")]
test1 <- na.omit(test1)
survpac <- princomp(test1)
summary(survpac)
plot(survpac)  #one super obvious factor, maybe two or 3
fa1 <- factanal(test1, factors = 3)
fa1
#Test on 3 buckets
test3 <- dat[,c("ACTHELP","CORRECTED","EXPECTAT","KIND","MOTIV","OPENFEED","PREP")]
test3 <- na.omit(test3)
survpac3 <- princomp(test3)
summary(survpac3)
plot(survpac3)  #one super obvious factor, maybe two or 3
fa3 <- factanal(test3, factors = 3)
fa3
# Test on 5 buckets
test5 <- dat1[,c("ACTHELP","CORRECTED","EXPECTAT","KIND","MOTIV","OPENFEED","PREP")]
test5 <- na.omit(test5)
survpac5 <- princomp(test5)
summary(survpac5)
plot(survpac5)  #one super obvious factor, maybe two or 3
fa5 <- factanal(test5, factors = 3)
fa5
write.csv(rbind(fa1$loadings, fa3$loadings, fa5$loadings), "My10.csv")
##### 5 QUESTION SURVEY##########################################################################
#Test on original data
test1 <- met4[,c("CORRECTED","EXPECTAT","CLOSE","PREP")]
test1 <- na.omit(test1)
survpac <- princomp(test1)
summary(survpac)
plot(survpac)  #one super obvious factor, maybe two or 3
fa1 <- factanal(test1, factors = 1)
fa1
#Test on 3 buckets
test3 <- dat[,c("CORRECTED","EXPECTAT","CLOSE","PREP")]
test3 <- na.omit(test3)
survpac3 <- princomp(test3)
summary(survpac3)
plot(survpac3)  #one super obvious factor, maybe two or 3
fa3 <- factanal(test3, factors = 1)
fa3
# Test on 5 buckets
test5 <- dat1[,c("CORRECTED","EXPECTAT","CLOSE","PREP")]
test5 <- na.omit(test5)
survpac5 <- princomp(test5)
summary(survpac5)
plot(survpac5)  #one super obvious factor, maybe two or 3
fa5 <- factanal(test5, factors = 1)
fa5
write.csv(rbind(fa1$loadings, fa3$loadings, fa5$loadings), "My5.csv")
tim <- read.csv("MET PAGETIME.csv",header=TRUE)
tim2 <- subset(tim,tim[,"FORM"]=="l")
which( colnames(tim2)=="PAGE5TIME_4" )
tim2 <- tim2[,c(2,6,7,67:86)]
tim2 <- na.omit(tim2)
summary(tim2)
boxplot(tim2[,c(1:17,20)], outline=FALSE)
tim2$total <- tim2$PAGE1TIME_3+tim2$PAGE2TIME_3+tim2$PAGE3TIME_3+tim2$PAGE4TIME_3+tim2$PAGE5TIME_3
summary(tim2$total)
boxplot(tim2$total, outline=F)
ggplot(tim2, aes(x=total))+geom_histogram()
# Min   - 45.01
# Q1    - 208.17  (~3 min 30 sec)
# Med   - 290.76  (~4 min 45 sec)
# Mean  - 341.61  (~5 min 40 sec)
# Q3    - 414.51  (~6 min 55 sec)
# Max   - 3640.09 (~1 hour)
tim2[,c(3,7,11,15,19,21)]
# What about total survey session time
tim2$STARTSESS <- as.POSIXct(tim2$STARTDATE, format="%d-%b-%y %I.%M.%OS %p")
tim2$ENDSESS <- as.POSIXct(tim2$ENDDATE, format="%d-%b-%y %I.%M.%OS %p")
fintim <- tim2[order(tim2$RESPONSEID),c("RESPONSEID","STARTDATE","ENDDATE","total","STARTSESS","ENDSESS","SESSLENGTH", "TIMEDLENGTH")]
df <- met
df[,c("SUBSTATUS_TYPE_ID","STATUS_TYPE_ID","SCHEDULE_ID","CLASSROOM_ID","CLASSROOM_NM","COMPANIONSHIP_ID","SCHED_MTC_START_DT","ACTUAL_MTC_START_DT","SCHED_MTC_DPRT_DT",
"ACTUAL_MTC_DPRT_DT","SUBJECT_LANG_ID","TEACHING_LANG_ID","Q_SESSION_DT","SESSION_ID","RESPONSEID","MTCDURATION","STARTDATE","ENDDATE",
"TEACHER_SELECTOR_1","TEACHER_SELECTOR_2","TEACHER_SELECTOR_3","TEACHER_SELECTOR_4","IPADDRESS","LOCATIONACCURACY","LOCATIONLATITUDE",
"LOCATIONLONGITUDE","MAININTRO","META_5_TEXT","META_6_TEXT","MGR_NM","MLDSID","MNM","RECIPIENTEMAIL","RECIPIENTFIRSTNAME","RECIPIENTLASTNAME",
"STATUS","SUP_NM","SURVIMPROV","T10ID","T10NM","T1ID","T1NM","T2ID","T2NM","T3ID","T3NM","T4ID","T4NM","T5ID","T5NM","T6ID","T6NM","T7ID","T7NM",
"T8ID","T8NM","T9ID","T9NM","INTRO","LIKES","SUGG")] <- NULL
df$SUBJECT_LANG <- as.character(df$SUBJECT_LANG)
#CHANGE SUBJECT_LANG FOR ENGLISH
for(i in 1:1580){
if(df$SUBJECT_LANG[i]=="Spanish"|df$SUBJECT_LANG[i]=="Japanese"){
df$SUBJECT_LANG[i] <- df$SUBJECT_LANG[i]
} else {
df$SUBJECT_LANG[i] <- "English"
}
}
#Separate into languages
dflang <- subset(df,df[,"LANGLEARN"]==1)
dfnonl <- subset(df,df[,"LANGLEARN"]==0)
#Remove 4 language questions
dfnonl[,c("LANGEFF","LANGEXPECT","LANGINV","LANGPOS")]<- NULL
#Model (Start with 4 of the 5 question survey)
dfnonl$SUBJECT_LANG <- NULL
dfnonl$LANGLEARN <- NULL
dfnonl$SURVINTRO <- NULL
for(i in 1:989){
if(is.na(dfnonl$SURVHONEST[i])==TRUE){
dfnonl$SURVHONEST[i] <- mean(na.omit(dfnonl$SURVHONEST))
} else {
dfnonl$SURVHONEST[i] <- dfnonl$SURVHONEST[i]
}
}
max.model <- lm(cbind(CORRECTED,EXPECTAT,KIND,PREP)~GENDER+RESP_EVAL_ORDER+TITLE+ECCL_GROUP_ID+BRANCH_ID+BRANCH_NM+DISTRICT_ID+
TRAINING_GROUP_ID+TRK_ID+COMP_ID+PRIMARY_LANG_ID+TRAINING_LANGUAGE_ID+TEACHING_LANG+THIS_TID+FORM+FINISHED+
META_1_TEXT+META_2_TEXT+META_3_TEXT+META_4_TEXT+META_7_TEXT+MGR_ID+MID+SUP_ID+TGID+T_CNT, data=dfnonl)
min.model <- lm(cbind(CORRECTED,EXPECTAT,KIND,PREP)~RESP_EVAL_ORDER+THIS_TID+META_2_TEXT+META_3_TEXT+META_4_TEXT+META_7_TEXT+GENDER+TRK_ID+PRIMARY_LANG_ID+COMP_ID+ECCL_GROUP_ID+MGR_ID,data=dfnonl)
summary(min.model)
noeffect<-lm(cbind(CORRECTED,EXPECTAT,KIND,PREP)~+1,data=dfnonl)
anova(max.model,min.model)
train.pred <- round(predict(max.model,dfnonl,type="response"),0)
#Somewhat decent (HOW CAN I MAKE AN AUC CURVE?)
q <-cbind(dfnonl$CORRECTED,dfnonl$EXPECTAT,dfnonl$KIND,dfnonl$PREP,train.pred)
q <- as.data.frame(q)
names(q) <- c("CORRECTEDR","EXPECTATR","KINDR","PREPR","CORRECTEDM","EXPECTATM","KINDM","PREPM")
plot(q$CORRECTEDR[1:200],type="o")
lines(q$CORRECTEDM[1:200],type="o", col="blue")
#WHAT ABOUT 5 BUCKETS? IT DOESNT WORK!!!!!!!!!!
dfnonl2 <- dfnonl
for(i in 1:989){
for(j in c(30:44,50)){
if(is.na(dfnonl2[i,j])==TRUE){}
else if(dfnonl2[i,j]==4|dfnonl2[i,j]==5){
dfnonl2[i,j]<-2
} else if(dfnonl2[i,j]==2|dfnonl2[i,j]==3){
dfnonl2[i,j]<-1
} else if(dfnonl2[i,j]==1|dfnonl2[i,j]==0|dfnonl2[i,j]==(-1)){
dfnonl2[i,j] <- (0)
} else if(dfnonl2[i,j]==(-2)|dfnonl2[i,j]==(-3)){
dfnonl2[i,j] <- (-1)
} else if(dfnonl2[i,j]==(-4)|dfnonl2[i,j]==(-5)){
dfnonl2[i,j] <- (-2)
}
}
}
mod5 <- lm(cbind(CORRECTED,EXPECTAT,KIND,PREP)~GENDER+RESP_EVAL_ORDER+TITLE+ECCL_GROUP_ID+BRANCH_ID+BRANCH_NM+DISTRICT_ID+
TRAINING_GROUP_ID+TRK_ID+COMP_ID+PRIMARY_LANG_ID+TRAINING_LANGUAGE_ID+TEACHING_LANG+THIS_TID+FORM+FINISHED+
META_1_TEXT+META_2_TEXT+META_3_TEXT+META_4_TEXT+META_7_TEXT+MGR_ID+MID+SUP_ID+TGID+T_CNT, data=dfnonl2)
mod5pred <- round(predict(mod5,dfnonl2,type="response"),0)
r <-cbind(dfnonl2$CORRECTED,dfnonl2$EXPECTAT,dfnonl2$KIND,dfnonl2$PREP,mod5pred)
r <- as.data.frame(r)
names(r) <- c("CORRECTEDR","EXPECTATR","KINDR","PREPR","CORRECTEDM","EXPECTATM","KINDM","PREPM")
plot(r$PREPR[200:400],type="o")
lines(r$PREPM[200:400],type="o", col="blue")
abs(sum(r$CORRECTEDR)-sum(na.omit(r$CORRECTEDM)))/(sum(r$CORRECTEDR)+sum(na.omit(r$CORRECTEDM)))
sum(q$CORRECTEDR)
sum(q$CORRECTEDM)
989*5
min(q$CORRECTEDM)
dfnonl3 <- na.omit(dfnonl)
totalScores <- numeric()
for(i in 1:934){
score <- 0
for(j in c(30:46,50,51)){
score <- score+dfnonl3[i,j]
}
totalScores[i]<-score
}
#Max Score == 95
print(totalScores[1:20])
dfnonl$THIS_TID[1]
dfnonl$THIS_TID[13]
dfnonl3$TotalScores <- totalScores
uhoh <- subset(dfnonl3,dfnonl3$TotalScores<50)
yay <- subset(dfnonl3,dfnonl3$TotalScores>=50)
table(uhoh$THIS_TID)
test <-subset(dfnonl3,dfnonl3$THIS_TID==57207292)
subset(met,met$THIS_TID==57207292)
meanAndSD <- data.frame(aggregate(dfnonl3$TotalScores,by=list(dfnonl3$THIS_TID),FUN=mean),
aggregate(dfnonl3$TotalScores,by=list(dfnonl3$THIS_TID),FUN=sd)$x,
aggregate(dfnonl3$TotalScores,by=list(dfnonl3$THIS_TID),FUN=length)$x)
names(meanAndSD) <- c("THIS_TID","MEAN","SD","COUNT")
meanAndSD <- na.omit(meanAndSD)
#Subset to surveys with 10+ responses and 20+
meanAndSD10 <- subset(meanAndSD,meanAndSD$COUNT >=10)
meanAndSD20 <- subset(meanAndSD,meanAndSD$COUNT >=20)
#Divide the teachers into quartiles
for(i in 1:nrow(meanAndSD)){
if(meanAndSD$MEAN[i]<=79.54){
meanAndSD$Quart[i] <- "First"
} else if (meanAndSD$MEAN[i]>79.54 & meanAndSD$MEAN[i]<=82.07){
meanAndSD$Quart[i] <- "Second"
} else if (meanAndSD$MEAN[i]>82.07 & meanAndSD$MEAN[i]<=86.51){
meanAndSD$Quart[i] <- "Third"
} else if (meanAndSD$MEAN[i]>86.51){
meanAndSD$Quart[i] <- "Fourth"
}
}
meanAndSD <- data.frame(aggregate(dfnonl3$TotalScores,by=list(dfnonl3$THIS_TID),FUN=mean),
aggregate(dfnonl3$TotalScores,by=list(dfnonl3$THIS_TID),FUN=sd)$x,
aggregate(dfnonl3$TotalScores,by=list(dfnonl3$THIS_TID),FUN=length)$x)
names(meanAndSD) <- c("THIS_TID","MEAN","SD","COUNT")
meanAndSD <- na.omit(meanAndSD)
#Subset to surveys with 10+ responses and 20+
meanAndSD10 <- subset(meanAndSD,meanAndSD$COUNT >=10)
meanAndSD20 <- subset(meanAndSD,meanAndSD$COUNT >=20)
#Divide the teachers into quartiles
for(i in 1:nrow(meanAndSD)){
if(meanAndSD$MEAN[i]<=79.54){
meanAndSD$Quart[i] <- "First"
} else if (meanAndSD$MEAN[i]>79.54 & meanAndSD$MEAN[i]<=82.07){
meanAndSD$Quart[i] <- "Second"
} else if (meanAndSD$MEAN[i]>82.07 & meanAndSD$MEAN[i]<=86.51){
meanAndSD$Quart[i] <- "Third"
} else if (meanAndSD$MEAN[i]>86.51){
meanAndSD$Quart[i] <- "Fourth"
}
}
library(dplyr)
library(tidyr)
library(ggplot2)
library(purrr)
#Create data frame like one in example on internet
MSD <- as.data.frame(cbind(meanAndSD$MEAN,meanAndSD$SD,meanAndSD$THIS_TID))
names(MSD) <- c("MEAN","SD","THIS_TID")
MSD$THIS_TID <- as.character(MSD$THIS_TID)
#Plot of every english teacher (except for those who had only one survey done)
x <- seq(0,130,by=0.01)
tallDF <- pmap_df(MSD, ~ tibble(x=x,test=..3,density=dnorm(x,..1,..2)))
p <- ggplot(tallDF, aes(color=factor(test),x=x,y=density)) +
geom_line() +
#geom_segment(data=MSD,aes(color=THIS_TID,x=MEAN,y=0,xend=MEAN,yend=100),linetype="dashed") +
coord_cartesian(ylim=c(0,0.16))
print(p)
###########################################################################################################################
#Plot of all english teachers who had 10 or more surveys done
MSD10 <- as.data.frame(cbind(meanAndSD10$MEAN,meanAndSD10$SD,meanAndSD10$THIS_TID))
names(MSD10) <- c("MEAN","SD","THIS_TID")
MSD10$THIS_TID <- as.character(MSD10$THIS_TID)
#Plot
x <- seq(0,130,by=0.01)
tallDF10 <- pmap_df(MSD10, ~ tibble(x=x,test=..3,density=dnorm(x,..1,..2)))
p <- ggplot(tallDF10, aes(color=factor(test),x=x,y=density)) +
geom_line() +
coord_cartesian(ylim=c(0,0.1))
print(p)
###########################################################################################################################
#Plot of all english teachers who had 20 or more surveys done
MSD20 <- as.data.frame(cbind(meanAndSD20$MEAN,meanAndSD20$SD,meanAndSD20$THIS_TID))
names(MSD20) <- c("MEAN","SD","THIS_TID")
MSD20$THIS_TID <- as.character(MSD20$THIS_TID)
#Plot
x <- seq(0,130,by=0.01)
tallDF20 <- pmap_df(MSD20, ~ tibble(x=x,test=..3,density=dnorm(x,..1,..2)))
p <- ggplot(tallDF20, aes(color=factor(test),x=x,y=density)) +
geom_line() +
coord_cartesian(ylim=c(0,0.1))
print(p)
###########################################################################################################################
#Plot Quartiles - Not Very pretty Because Every graph for every person is still being generated
quart <- c("First","Second","Third","Fourth")
#for(i in 1:4){
# meanAndSD10Q <- subset(meanAndSD10,meanAndSD10$Quart==quart[i])
#  MSD10Q <- as.data.frame(cbind(meanAndSD10Q$MEAN,meanAndSD10Q$SD,meanAndSD10Q$Quart))
#  names(MSD10Q) <- c("MEAN","SD","Quartile")
#  MSD10Q$Quartile <- as.character(MSD10Q$Quartile)
#  MSD10Q$MEAN <- as.numeric(as.character(MSD10Q$MEAN))
#  MSD10Q$SD <- as.numeric(as.character(MSD10Q$SD))
#Plot
#  x <- seq(0,130,by=0.01)
#  tallDF10Q <- pmap_df(MSD10Q, ~ tibble(x=x,test=..3,density=dnorm(x,..1,..2)))
#  p <- ggplot(tallDF10Q, aes(color=factor(test),x=x,y=density)) +
#       geom_line() +
#       coord_cartesian(ylim=c(0,1))
#  print(p)
#}
###########################################################################################################################
# Go Back to original data, assign dfnonl3$Mean to respective people and then assign quartiles and aggregate by quartile?
QuarID <- as.data.frame(cbind(as.character(meanAndSD$THIS_TID),meanAndSD$MEAN,meanAndSD$Quart))
names(QuarID) <- c("THIS_TID","Mean","Quart")
QuarID$Mean <- as.numeric(as.character(QuarID$Mean))
QuarID$THIS_TID <- as.integer(as.character(QuarID$THIS_TID))
QuarID$Quart <- factor(QuarID$Quart,levels=c("First","Second","Third","Fourth"))
dfnonl3$THIS_TID <- as.integer(as.character(dfnonl3$THIS_TID))
#library(dplyr)
dfnonl3M <- left_join(QuarID,dfnonl3,by="THIS_TID")
meanAndSDQ <- data.frame(aggregate(dfnonl3M$TotalScores,by=list(dfnonl3M$Quart),FUN=mean),
aggregate(dfnonl3M$TotalScores,by=list(dfnonl3M$Quart),FUN=sd)$x,
aggregate(dfnonl3M$TotalScores,by=list(dfnonl3M$Quart),FUN=length)$x)
names(meanAndSDQ) <- c("Quart","MEAN","SD","COUNT")
MSDQ <-as.data.frame(cbind(meanAndSDQ$MEAN,meanAndSDQ$SD,meanAndSDQ$Quart))
names(MSDQ) <- c("MEAN","SD","Quartile")
MSDQ$Quartile <- as.character(MSDQ$Quartile)
MSDQ$MEAN <- as.numeric(as.character(MSDQ$MEAN))
MSDQ$SD <- as.numeric(as.character(MSDQ$SD))
#Plot
x <- seq(0,130,by=0.01)
tallDFQ <- pmap_df(MSDQ, ~ tibble(x=x,test=..3,density=dnorm(x,..1,..2)))
p <- ggplot(tallDFQ, aes(color=factor(test),x=x,y=density)) +
geom_line() +
coord_cartesian(ylim=c(0,0.1))
print(p)
###########################################################################################################################
#Individual histograms
a <- subset(dfnonl3M, dfnonl3M$Quart=="First")
b <- subset(dfnonl3M, dfnonl3M$Quart=="Second")
c <- subset(dfnonl3M, dfnonl3M$Quart=="Third")
d <- subset(dfnonl3M, dfnonl3M$Quart=="Fourth")
ggplot(a,aes(TotalScores)) + geom_histogram(bins=40) + xlim(-30,100) + ylim(0,60)
ggplot(b,aes(TotalScores)) + geom_histogram(bins=40) + xlim(-30,100) + ylim(0,60)
ggplot(c,aes(TotalScores)) + geom_histogram(bins=40) + xlim(-30,100) + ylim(0,60)
ggplot(d,aes(TotalScores)) + geom_histogram(bins=40) + xlim(-30,100) + ylim(0,60)
AnovaResults2 <- aov(TotalScores~factor(dfnonl3M$Quart,levels=c("Second","First","Third","Fourth")),data=dfnonl3M)
anova(AnovaResults2)
ajuste <- lm(TotalScores~factor(dfnonl3M$Quart,levels=c("Second","First","Third","Fourth")), data=dfnonl3M)
summary(ajuste)
#REMOVE ALL COLUMNS THAT ARE FULL OF NA'S
met2 <-dfnonl3M
#Assign training group id's to test/train data
groups <- met2 %>%
select(TRAINING_GROUP_ID) %>%
distinct(TRAINING_GROUP_ID) %>%
rowwise() %>%
mutate(group= sample(c("train","test"),1,replace=TRUE,prob=c(0.7,0.3)))
#Join group assignments to met2
met2 <- left_join(groups,met2,by="TRAINING_GROUP_ID")
#Find group means
groupMean <-aggregate(met2$TotalScores,by=list(met2$TRAINING_GROUP_ID),FUN=mean)
names(groupMean) <- c("TRAINING_GROUP_ID","groupMean")
met2 <- left_join(groupMean,met2,by="TRAINING_GROUP_ID")
#Separate test/train into two datasets
train <- subset(met2,met2$group=="train")
test <- subset(met2,met2$group=="test")
###########################################################################################################################
#Analysis on train
trial <- subset(met2,met2$THIS_TID == 57207292)
plot(trial$groupMean,ylim=c(0,95),col="Blue",type="l",ylab = "Scores",xlab = "Evaluations",main="Individual Teacher Scores")
points(trial$TotalScores)
abline(h=trial$Mean,v=c(9.5,17.5,24.5))
#abline(h=trial$groupMean)
#I'm going to try to make a data frame with only the english outcome variables, convert them into numerics and see if I can make a correlation matrix
corrTest <- select(dfnonl3M, out.var2)
out.var
out.var2 <- out.var[c(1:15,20:29)]
corrTest <- select(dfnonl3M, out.var2)
corrTest$GENDER <- NULL
out.var2
out.var2 <- out.var[c(1:15,20:28)]
corrTest <- select(dfnonl3M, out.var2)
corrTest$GENDER <- NULL
corrTest$SURVHONEST <- NULL
corrTest$RESP_EVAL_ORDER <- NULL
corrTest$TITLE <- NULL
corrTest$DEVICE <- NULL
corrTest$T_CNT <- NULL
corrTest$FORM <- NULL
corrTest <- mutate_all(corrTest, function(x) as.numeric(as.character(x)))
corrResults <-round(cor(corrTest),4)
library(psych)
corr.test(corrTest)
setwd("~/GitHub/My Projects/Breast Cancer")
dat <- read.csv("Breast_cancer_data.csv",header=TRUE)
head(dat)
tail(dat)
str(dat)
summary(dat)
plot(dat$mean_radius)
hist(dat$mean_radius)
hist(dat[,i])
#Histograms of each variable
for(i in 1:ncol(dat)){
hist(dat[,i])
}
# Correlation table
cor(dat)
#Rename columns for ease
names(dat)
#Rename columns for ease
names(dat) <- c("Radius","Texture","Perimeter","Area","Smoothness","Diagnosis")
# Correlation table
cor(dat)
# Visualize correlations
plot(dat$Radius,dat$Perimeter)
plot(dat$Radius, dat$Area)
plot(dat$Radius,dat$Diagnosis)
ggplot(dat,aes(Radius,Diagnosis)) + geom_smooth()
#Read in libraries
library(tidyverse)
ggplot(dat,aes(Radius,Diagnosis)) + geom_smooth()
ggplot(dat,aes(Radius,Diagnosis)) + geom_point)_
ggplot(dat,aes(Radius,Diagnosis)) + geom_point()
ggplot(dat,aes(Radius,Diagnosis)) + geom_point() = geom_smooth
ggplot(dat,aes(Radius,Diagnosis)) + geom_point() + geom_smooth()
ggplot(dat,aes(Radius,Perimeter)) + geom_point()
ggplot(dat,aes(Radius,Perimeter)) + geom_point() + geom_smooth()
ggplot(dat,aes(Radius,Area)) + geom_point() + geom_smooth()
# Correlation table
cor(dat)  #Radius/Perimeter/Area have strong positive corr, all three have strong neg. corr with Diagnosis
mod <- glm(Diagnosis ~ Radius + Texture + Smoothness, data=dat,family="binomial")
mod
summary(mod)
rows <- sample(1:nrow(dat), nrow(dat)*0.3,replace=FALSE)
rows
train <- dat[rows,]
test <- dat[-rows,]
rows <- sample(1:nrow(dat), nrow(dat)*0.3,replace=FALSE)
train <- dat[rows,]
test <- dat[-rows,]
mod <- glm(Diagnosis ~ Radius + Texture + Smoothness, data=train, family="binomial")
summary(mod) #All values are significant, AIC=195.29
#Build a better model?
min.mod <- glm(Diagnosis ~ +1, data=train, family="binomial")
max.mod <- glm(Diagnosis ~ ., data=train, family="binomial")
mod1 <- step(min.mod, direction="both", scope=max.mod)
set.seed(101) #To replicate
rows <- sample(1:nrow(dat), nrow(dat)*0.3,replace=FALSE)
train <- dat[rows,]
test <- dat[-rows,]
mod <- glm(Diagnosis ~ Radius + Texture + Smoothness, data=train, family="binomial")
summary(mod) #All values are significant, AIC=
min.mod <- glm(Diagnosis ~ +1, data=train, family="binomial")
max.mod <- glm(Diagnosis ~ ., data=train, family="binomial")
mod1 <- step(min.mod, direction="both", scope=max.mod)
min.mod <- glm(Diagnosis ~ +1, data=train, family="binomial")
max.mod <- formula(glm(Diagnosis ~ ., data=train, family="binomial"))
mod1 <- step(min.mod, direction="both", scope=max.mod)
library(vif)
library(VIF)
library(car)
vif(mod1)
vif(mod)
library(ROCR)
train.pred <- prediction(predict(mod, type="response"), train$Diagnosis)
train.perf<-performance(train.pred, measure="tpr", x.measure="fpr")
plot(train.perf)
abline(0,1)
test.pred <- prediction(predict(mod, newdata=test, type="response"), test$Diagnosis)
test.perf<-performance(test.pred, measure="tpr", x.measure="fpr")
plot(test.perf, add=TRUE, col="royalblue")
train.pred <- prediction(predict(mod, type="response"), train$Diagnosis)
train.perf<-performance(train.pred, measure="tpr", x.measure="fpr")
plot(train.perf)
abline(0,1)
#test.data
test.pred <- prediction(predict(mod, newdata=test, type="response"), test$Diagnosis)
test.perf<-performance(test.pred, measure="tpr", x.measure="fpr")
plot(test.perf, add=TRUE, col="royalblue")
plot(train.perf, col="blue")
auc(mod)
#auc
performance(test.pred, measure="auc")
performance(test.pred, measure="auc")
performance(test.pred, measure="auc")[[1]]
performance(test.pred, measure="auc")
