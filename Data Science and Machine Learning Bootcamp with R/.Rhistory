v1 <- c(22,150,"M")
V2 <- c(25,165,"M")
v3 <= c(26,120,"F")
v3 <- c(26,120,"F")
v2 <- c(25,165,"M")
rbind(Sam=v1, Frank=v2, Amy=v3)
df <-rbind(Sam=v1, Frank=v2, Amy=v3)
`colnames<-`(df, c("Age","Weight","Sex"))
df
colnames
v1 <- c(22,25,26)
v2 <- c(150,165,120)
v3 <- c("M","M","F")
Age <- c(22,25,26)
Weight <- c(150,165,120)
Sex <- c("M","M","F")
df <- data.frame(Age, Weight, Sex)
row.names(df) <- c("Sam","Frank","Amy")
df
df
is.data.frame(mtcars)
mat <- matrix(1:25, nrow=5)
mat
mat <- as.data.frame(mat)
mat
matk
mat
df <- mtcars
head(df)
mean(df$mpg)
subset(df, mpg==6)
subset(df, cyl==6)
df[,c("am","gear","carb")]
df$performance <- df$hp/df$wt
df$performance
df$performance <- round(df$performance,2)
df$performance
q <- subset(df,hp>100 & wt>2.5)
q
mean(q$mpg)
# Ex 11: What is the mpg of the Hornet Sportabout?
df["Hornet Sportabout","mpg"]
x <- 3
if(x%2==0){
if((x%2)==0){
if((x%2)=0){
x%2
x/2
x%%2
2%%2
4%%2
x <- 3
if((x%%2)==0){
print("Even Number")
}else{
print("Odd Number")
}
x <- 8
if((x%%2)==0){
print("Even Number")
}else{
print("Odd Number")
}
x <- matrix()
help(is.matrix)
x <- matrix()
if (is.matrix(x)){
print("Is a Matrix")
}else {
print("Not a Matrix")
}
x <- numeric()
if (is.matrix(x)){
print("Is a Matrix")
}else {
print("Not a Matrix")
}
x <- c(3,7,1)
x <- c(3,7,1)
if(x[1]>x[2]){
fir <- x[1]
sec <- x[2]
} else {
fir <- x[2]
sec <- x[1]
}
if(x[3]>fir & x[3]>sec){
thi <- sec
sec <- fir
fir <- x[3]
} else if(x[3]<fir & x[3]>sec ) {
thi <- sec
sec <- x[3]
} else {
thi <- x[3]
}
print(paste(fir, sec, thi))
x <- c(9,7,1)
if(x[1]>x[2]){
fir <- x[1]
sec <- x[2]
} else {
fir <- x[2]
sec <- x[1]
}
if(x[3]>fir & x[3]>sec){
thi <- sec
sec <- fir
fir <- x[3]
} else if(x[3]<fir & x[3]>sec ) {
thi <- sec
sec <- x[3]
} else {
thi <- x[3]
}
print(paste(fir, sec, thi))
x <- c(9,7,11)
if(x[1]>x[2]){
fir <- x[1]
sec <- x[2]
} else {
fir <- x[2]
sec <- x[1]
}
if(x[3]>fir & x[3]>sec){
thi <- sec
sec <- fir
fir <- x[3]
} else if(x[3]<fir & x[3]>sec ) {
thi <- sec
sec <- x[3]
} else {
thi <- x[3]
}
print(paste(fir, sec, thi))
x <- (9,7,11)
x <- c(9,7,11)
if (x[1]>x[2]&x[1]>x[3]){
print(x[1])
} else if(x[2]>x[1]& x[2]>x[3]) {
print(x[2])
} else {
print(x[3])
}
x <- c(90,7,11)
if (x[1]>x[2]&x[1]>x[3]){
print(x[1])
} else if(x[2]>x[1]& x[2]>x[3]) {
print(x[2])
} else {
print(x[3])
}
sum()
prod <- function(x1,x2){
return(x1+x2)
}
prod(5,6)
prod(28,6)
x <- 5
v <- c(1:10)
num_check <- function(x1,v1){
for(i in 1:length(v1)){
if(x1==v1[i]){
return(TRUE)
}
}
return(FALSE)
}
num_check(x,v)
x <- 11
v <- c(1:10)
num_check <- function(x1,v1){
for(i in 1:length(v1)){
if(x1==v1[i]){
return(TRUE)
}
}
return(FALSE)
}
num_check(x,v)
x <- 5
v <- c(1:10)
num_count <- function(x1,v1){
total <- 0
for(i in 1:length(v1)){
if(x1==v1[i]){
total <- total+1
}
}
return(0)
}
num_count(x,v)
x <- 5
v <- c(1:10)
num_count <- function(x1,v1){
total <- 0
for(i in 1:length(v1)){
if(x1==v1[i]){
total <- total+1
}
}
return(total)
}
num_count(x,v)
x <- 5
v <- c(1:10,5,5,5,7,6,8,9,6,34,123,5,5,5)
num_count <- function(x1,v1){
total <- 0
for(i in 1:length(v1)){
if(x1==v1[i]){
total <- total+1
}
}
return(total)
}
num_count(x,v)
x <- 8
v <- c(1:10,5,5,5,7,6,8,9,6,34,123,5,5,5)
num_count <- function(x1,v1){
total <- 0
for(i in 1:length(v1)){
if(x1==v1[i]){
total <- total+1
}
}
return(total)
}
num_count(x,v)
10/6
x <- 10
class(x)
x<- as.integer(x)
x/6
y <- as.integer(6)
class(x)
class(y)
x/y
c
clear
x
x
x%%5
x <- 17
x%%5
bar_count <- function(x){
little <- x%%5
big <- (x-little)/5
return(big+little)
}
bar_count(59)
met <- read.csv("MET May-16.csv",header=TRUE)
setwd("~/")
met <- read.csv("MET May-16.csv",header=TRUE)
met
View(met)
mod <- lm(cbind(ACTHELP,CLOSE)~THIS_TID+GENDER+EXPECTAT, data=met)
summary(mod)
setwd("~/R-Course-HTML-Notes/R-Course-HTML-Notes/R-for-Data-Science-and-Machine-Learning/Training Exercises/Machine Learning Projects/CSV files for ML Projects")
bike <- read.csv("bikeshare.csv",header=TRUE)
View(bike)
head(bike)
p1 <- ggplot(bike, aes=(x=temp, y=count))+geom_point()
p1 <- ggplot(bike, aes=(x=temp, y=count))+geom_jitter()
p1 <- ggplot(bike, aes(x=temp, y=count))+geom_jitter()
library(ggplot2)
library(ggplot2)
p1 <- ggplot(bike, aes(x=temp, y=count))+geom_jitter()
p1
p1 <- ggplot(bike, aes(x=temp, y=count))+geom_jitter(aes(color=temp))
p1
p1 <- ggplot(bike, aes(x=temp, y=count))+geom_jitter(aes(color=temp, alpha=0.1))
ggplot(bike, aes(x=temp, y=count))+geom_jitter(aes(color=temp, alpha=0.1))
bike$datetime <- as.POSIXct(bike$datetime, format="%Y-%m-%d %H:%M:%S")
ggplot(bike, aes(x=datetime, y=count))+geom_jitter(aes(color=temp, alpha=0.1))
cor(bike$temp, bike$count)
ggplot(bike, aes(x=season, y=count))+geom_boxplot()
ggplot(bike, aes(x=season, y=count))+geom_boxplot(aes(group=season))
ggplot(bike, aes(x=season, y=count))+geom_boxplot(aes(group=factor(season)))
ggplot(bike, aes(x=season, y=count))+geom_boxplot(aes(group=factor(season)), color=season)
ggplot(bike, aes(x=season, y=count))+geom_boxplot(aes(group=factor(season)), color='blue)
ggplot(bike, aes(x=season, y=count))+geom_boxplot(aes(group=factor(season)), color='blue')
ggplot(bike, aes(x=season, y=count))+geom_boxplot(aes(group=factor(season)), color="blue")
ggplot(bike, aes(x=season, y=count, fill=season))+geom_boxplot(aes(group=factor(season)))
ggplot(bike, aes(x=season, y=count, fill=factor(season)))+geom_boxplot(aes(group=factor(season)))
time.stamp <- bike$datetime[4]
time.stamp
time.stamp <- bike$datetime
sapply(time.stamp,format(time.stamp,"%H"))
time.stamp <- format(time.stamp,"%H")
time.stamp
bike$hour <- format(time.stamp,"%H")
for(i in 1:length(time.stamp)){
bike$hour <- format(time.stamp,"%H")
}
bike$hour <- time.stamp
ggplot(bike, aes(x=hour,y=count))+geom_point()
ggplot(bike, aes(x=hour,y=count))+geom_jitter()
ggplot(bike, aes(x=hour,y=count))+geom_jitter(color=temp)
ggplot(bike, aes(x=hour,y=count, color=temp))+geom_jitter()
ggplot(bike, aes(x=hour,y=count, color=temp))+geom_jitter()+scale_color_gradient(low="blue", mid="green", high="red")
ggplot(bike, aes(x=hour,y=count, color=temp))+geom_jitter()+scale_color_gradient(midpoint=mid,low="blue", mid="green", high="red")
ggplot(bike, aes(x=hour,y=count, color=temp))+geom_jitter()+scale_color_gradient(,low="blue", high="red")
ggplot(bike, aes(x=hour,y=count, color=temp))+geom_jitter()+scale_color_gradient(colors=c("blue","green","red"))
ggplot(bike, aes(x=hour,y=count, color=temp))+geom_jitter()+scale_color_gradientn(colors=c("blue","green","red"))
ggplot(bike, aes(x=hour,y=count, color=temp))+geom_jitter()+scale_color_gradientn(colors=c("blue","green","yellow","red"))
ggplot(bike, aes(x=hour,y=count, color=temp))+geom_jitter(alpha=0.1)+scale_color_gradientn(colors=c("blue","green","yellow","red"))
ggplot(bike, aes(x=hour,y=count, color=temp))+geom_jitter(alpha=0.5)+scale_color_gradientn(colors=c("blue","green","yellow","red"))
ggplot(bike, aes(x=hour,y=count, color=temp))+geom_jitter(alpha=0.3)+scale_color_gradientn(colors=c("blue","green","yellow","red"))
ggplot(bike, aes(x=hour,y=count, color=temp))+geom_jitter(alpha=0.3)+scale_color_gradientn(colors=c("black",blue","green","yellow","red"))
ggplot(bike, aes(x=hour,y=count, color=temp))+geom_jitter(alpha=0.3)+scale_color_gradientn(colors=c("black","blue","green","yellow","red"))
mod <- lm(count~.,data=bike)
temp.model <- lm(count~temp,data=bike)
summary(temp.model)
newdata <- data.frame(temp=25)
predict(temp.model, newdata)
bike$hour <- as.numeric(bike$hour)
mod <- lm(count~. -casual-registered-datetime-atemp, data=bike)
summary(bike)
summary(mod)
